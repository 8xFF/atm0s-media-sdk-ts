syntax = "proto3";

package sip_gateway;

message IncomingCallData {
  message IncomingCallEvent {
    message SipEvent {
      message Cancelled {}

      message Bye {}

      oneof event {
        Cancelled cancelled = 1;
        Bye bye = 2;
      }
    }

    message Accepted {}

    message Rejected {}

    message Ended {}

    message Error { string message = 1; }

    oneof event {
      Error err = 10;
      SipEvent sip = 11;
      Accepted accepted = 12;
      Ended ended = 13;
      Rejected rejected = 14;
    }
  }

  message IncomingCallRequest {
    message Ring {}

    message Accept {
      string room = 1;
      string peer = 2;
      bool record = 3;
    }

    message End {}

    message Continue {}

    uint32 req_id = 1;

    oneof action {
      Ring ring = 10;
      Accept accept = 11;
      End end = 12;
      Continue continue = 13;
    }
  }

  message IncomingCallResponse {
    message Ring {}

    message Accept {}

    message End {}

    message Continue {}

    message Error { string message = 1; }

    uint32 req_id = 1;

    oneof response {
      Error error = 10;
      Ring ring = 11;
      Accept accept = 12;
      End end = 13;
      Continue continue = 14;
    }
  }

  oneof data {
    IncomingCallEvent event = 1;
    IncomingCallRequest request = 2;
    IncomingCallResponse response = 3;
  }
}

message OutgoingCallData {
  message OutgoingCallEvent {
    message SipEvent {
      message Provisional { uint32 code = 1; }

      message Early { uint32 code = 1; }

      message Accepted { uint32 code = 1; }

      message Failure { uint32 code = 1; }

      message Bye {}

      oneof event {
        Provisional provisional = 1;
        Early early = 2;
        Accepted accepted = 3;
        Failure failure = 4;
        Bye bye = 5;
      }
    }

    // user sent cancel
    message Cancelled {}

    // user sent bye
    message Terminated {}

    message Ended {}

    message Error { string message = 1; }

    oneof event {
      Error err = 1;
      SipEvent sip = 2;
      Ended ended = 3;
      Cancelled cancelled = 4;
      Terminated terminated = 5;
    }
  }

  message OutgoingCallRequest {
    message End {}

    uint32 req_id = 1;
    oneof action { End end = 10; }
  }

  message OutgoingCallResponse {
    message End {}

    message Error { string message = 1; }

    uint32 req_id = 1;
    oneof response {
      Error error = 10;
      End end = 11;
    }
  }

  oneof data {
    OutgoingCallEvent event = 1;
    OutgoingCallRequest request = 2;
    OutgoingCallResponse response = 3;
  }
}

message IncomingCallNotify {
  message CallArrived {
    string call_token = 1;
    string call_ws = 2;
    string call_from = 3;
    string call_to = 4;
  }

  message CallCancelled {
    string call_from = 3;
    string call_to = 4;
  }

  message CallAccepted {
    string call_from = 3;
    string call_to = 4;
  }

  message CallRejected {
    string call_from = 3;
    string call_to = 4;
  }

  oneof event {
    CallArrived arrived = 10;
    CallCancelled cancelled = 11;
    CallAccepted accepted = 12;
    CallRejected rejected = 13;
  }
}

message CallEvent {
  uint64 timestamp = 1;
  string call_id = 2;

  oneof event {
    IncomingCallNotify notify = 10;
    OutgoingCallData.OutgoingCallEvent outgoing = 11;
    IncomingCallData.IncomingCallEvent incoming = 12;
  }
}